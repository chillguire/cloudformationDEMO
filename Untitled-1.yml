AWSTemplateFormatVersion: "2010-09-09"

Description: EC2 for thesis

Parameters:
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    #CreationPolicy:
        #ResourceSignal:
          # Timeout: PT5M
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      Tags:
        - Key: Name
          Value: TEG-Software
      SecurityGroupIds:
        - sg-08f7645e967dcfdab
        - sg-0ed0873533f853c30
      UserData:
        "Fn::Base64":
          !Sub |
              #!/bin/bash

              # Error handling - ResourceSignal failure
              notify_failure() {
                echo 'ERROR'
                /opt/aws/bin/cfn-signal -e 1 --stack=EC2Stack --resource=EC2Instance
                exit 1
              }
              #trap 'notify_failure' ERR

              yum update -y
              yum install -y git nginx

              touch /etc/yum.repos.d/mongodb-org-7.0.repo
              printf "[mongodb-org-7.0]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/amazon/2023/mongodb-org/7.0/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://pgp.mongodb.com/server-7.0.asc\n" >> /etc/yum.repos.d/mongodb-org-7.0.repo

              yum install -y mongodb-org

              systemctl start mongod

              export HOME=/home/ec2-user
              cd /home/ec2-user
              
              sudo -H -u ec2-user bash -c 'touch /home/ec2-user/.bashrc'
              sudo -H -u ec2-user bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash'

              sudo -H -u ec2-user bash -c '. ~/.nvm/nvm.sh && nvm install --lts && nvm use --lts && node -v && npm -v'

              sudo -H -u ec2-user bash -c 'git clone https://github.com/chillguire/TEG-Software.git'
              
              cd TEG-Software

              touch .env
              printf "DB_URL = mongodb://127.0.0.1:27017/teg\nSESSION_SECRET = secreto\nMAIL_ACCOUNT = hola@hola.com\n" >> .env

              sudo -H -u ec2-user bash -c '. ~/.nvm/nvm.sh && nvm ls && nvm use --lts && node -v && npm -v && npm ci && npm install pm2 -g && pm2 start server.js'

              printf "user nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log notice;\npid /run/nginx.pid;\ninclude /usr/share/nginx/modules/*.conf;\nevents {\nworker_connections 1024;\n}\nhttp {\nsendfile            on;\ntcp_nopush          on;\nkeepalive_timeout   65;\ntypes_hash_max_size 4096;\ninclude             /etc/nginx/mime.types;\ndefault_type        application/octet-stream;\ninclude /etc/nginx/conf.d/*.conf;\nserver {\nlisten       80;\nlisten       [::]:80;\nserver_name  _;\nroot         /usr/share/nginx/html;\ninclude /etc/nginx/default.d/*.conf;\nlocation / {\nproxy_pass http://localhost:3000;\nproxy_http_version 1.1;\nproxy_set_header Upgrade \$http_upgrade;\nproxy_set_header Connection 'upgrade';\nproxy_set_header Host \$host;\nproxy_cache_bypass \$http_upgrade;\n}\n}\n}" > /etc/nginx/nginx.conf

              service nginx restart

              echo 'todo fino'
              # /opt/aws/bin/cfn-signal -e 0 --stack=EC2Stack --resource=EC2Instance
              # Error handling - ResourceSignal success

Outputs:
  PublicIp:
    Value: !GetAtt EC2Instance.PublicIp
  PublicDNS:
    Value: !GetAtt EC2Instance.PublicDnsName
